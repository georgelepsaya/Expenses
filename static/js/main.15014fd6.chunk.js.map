{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15014fd6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={dropdownChangeHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated!\");\n    console.log(title);\n  };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { React, useState } from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.targer.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            step=\"2024-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { React, useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onCancel={stopEditingHandler}\n          onSaveExpenseData={saveExpenseDataHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { React, useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}